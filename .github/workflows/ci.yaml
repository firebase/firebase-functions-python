name: ci

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ["3.10", "3.12"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python${{ matrix.python }} -m venv venv
          source venv/bin/activate 
          pip3 install --upgrade pip 
          python${{ matrix.python }} -m pip install -e ".[dev]"
      - name: Test with pytest & coverage
        run: |
          source venv/bin/activate
          python${{ matrix.python }} -m pytest --cov=src --cov-report term --cov-report html --cov-report xml -vv
      # TODO requires activation for this repository on codecov website first.
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v3

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python3.10 -m venv venv
          source venv/bin/activate 
          pip3 install --upgrade pip 
          python3.10 -m pip install -e ".[dev]"
      - name: Lint with pylint
        run: |
          source venv/bin/activate
          python3.10 -m pylint $(git ls-files '*.py')
      - name: Lint with mypy
        run: |
          source venv/bin/activate
          python3.10 -m mypy .

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python3.10 -m venv venv
          source venv/bin/activate 
          pip3 install --upgrade pip 
          python3.10 -m pip install -e ".[dev]"
      - name: Generate Reference Docs
        run: |
          source venv/bin/activate
          mkdir ./docs/build
          ./docs/generate.sh --out=./docs/build/ --pypath=src/
      - uses: actions/upload-artifact@v3
        name: Upload Docs Preview
        with:
          name: reference-docs
          path: ./docs/build/

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python3.10 -m venv venv
          source venv/bin/activate 
          pip3 install --upgrade pip 
          python3.10 -m pip install -e ".[dev]"
      - name: Check Formatting
        run: |
          source venv/bin/activate
          yapf -d -r -p .
